basePath: /
definitions:
  article.Article:
    properties:
      author:
        type: string
      cover_image:
        type: string
      full_text:
        type: string
      id:
        type: integer
      reading_time:
        type: integer
      short_summary:
        type: string
      title:
        type: string
    type: object
  freebook.FreeBook:
    properties:
      author:
        type: string
      cover_image:
        type: string
      id:
        type: integer
      pages:
        type: integer
      pdf_file:
        type: string
      summary:
        type: string
      title:
        type: string
    type: object
  paidbook.PaidBook:
    properties:
      author:
        type: string
      cover_image:
        type: string
      id:
        type: integer
      pages:
        type: integer
      pdf_file:
        type: string
      price:
        type: integer
      summary:
        type: string
      title:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a Online Library API with CRUD operations.
  title: Online Library API
  version: "1.0"
paths:
  /article:
    get:
      description: Get list of all articles
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/article.Article'
            type: array
      summary: Get all articles
      tags:
      - article
    post:
      consumes:
      - multipart/form-data
      description: Add a new article with file upload
      parameters:
      - description: Article Title
        in: formData
        name: title
        required: true
        type: string
      - description: Article Short Summary
        in: formData
        name: short_summary
        required: true
        type: string
      - description: Article Full Text
        in: formData
        name: full_text
        required: true
        type: string
      - description: Article Author
        in: formData
        name: author
        required: true
        type: string
      - description: Cover Image
        in: formData
        name: cover_image
        required: true
        type: file
      - description: Article Reading Time
        in: formData
        name: reading_time
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: created
          schema:
            type: string
      summary: Create new article
      tags:
      - article
  /article/{id}:
    delete:
      description: Delete a article by ID
      parameters:
      - description: Article ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: deleted
          schema:
            type: string
      summary: Delete article
      tags:
      - article
    get:
      description: Get a article by its ID
      parameters:
      - description: Article ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/article.Article'
      summary: Get article by ID
      tags:
      - article
    put:
      consumes:
      - multipart/form-data
      description: Update article details by ID (with optional new files)
      parameters:
      - description: Article ID
        in: path
        name: id
        required: true
        type: integer
      - description: Article Title
        in: formData
        name: title
        type: string
      - description: Article Short Summary
        in: formData
        name: short_summary
        type: string
      - description: Article Full Text
        in: formData
        name: full_text
        type: string
      - description: Article Author
        in: formData
        name: author
        type: string
      - description: Cover Image
        in: formData
        name: cover_image
        type: file
      - description: Article Reading Time
        in: formData
        name: reading_time
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: updated
          schema:
            type: string
      summary: Update article
      tags:
      - article
  /freebook:
    get:
      description: Get list of all freebooks
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/freebook.FreeBook'
            type: array
      summary: Get all freebooks
      tags:
      - freebook
    post:
      consumes:
      - multipart/form-data
      description: Add a new freebook with file upload
      parameters:
      - description: Book Title
        in: formData
        name: title
        required: true
        type: string
      - description: Book Summary
        in: formData
        name: summary
        type: string
      - description: Book Author
        in: formData
        name: author
        required: true
        type: string
      - description: Book Pages
        in: formData
        name: pages
        required: true
        type: integer
      - description: Cover Image
        in: formData
        name: cover_image
        required: true
        type: file
      - description: PDF File
        in: formData
        name: pdf_file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: created
          schema:
            type: string
      summary: Create new freebook
      tags:
      - freebook
  /freebook/{id}:
    delete:
      description: Delete a freebook by ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: deleted
          schema:
            type: string
      summary: Delete freebook
      tags:
      - freebook
    get:
      description: Get a freebook by its ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/freebook.FreeBook'
      summary: Get freebook by ID
      tags:
      - freebook
    put:
      consumes:
      - multipart/form-data
      description: Update freebook details by ID (with optional new files)
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      - description: Book Title
        in: formData
        name: title
        type: string
      - description: Book Summary
        in: formData
        name: summary
        type: string
      - description: Book Author
        in: formData
        name: author
        type: string
      - description: Book Pages
        in: formData
        name: pages
        type: integer
      - description: Cover Image
        in: formData
        name: cover_image
        type: file
      - description: PDF File
        in: formData
        name: pdf_file
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: updated
          schema:
            type: string
      summary: Update freebook
      tags:
      - freebook
  /paidbook:
    get:
      description: Get list of all paidbooks
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/paidbook.PaidBook'
            type: array
      summary: Get all paidbooks
      tags:
      - paidbook
    post:
      consumes:
      - multipart/form-data
      description: Add a new paidbook with file upload
      parameters:
      - description: Book Title
        in: formData
        name: title
        required: true
        type: string
      - description: Book Summary
        in: formData
        name: summary
        type: string
      - description: Book Author
        in: formData
        name: author
        required: true
        type: string
      - description: Book Pages
        in: formData
        name: pages
        required: true
        type: integer
      - description: Book Price
        in: formData
        name: price
        required: true
        type: integer
      - description: Cover Image
        in: formData
        name: cover_image
        required: true
        type: file
      - description: PDF File
        in: formData
        name: pdf_file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: created
          schema:
            type: string
      summary: Create new paidbook
      tags:
      - paidbook
  /paidbook/{id}:
    delete:
      description: Delete a paidbook by ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: deleted
          schema:
            type: string
      summary: Delete paidbook
      tags:
      - paidbook
    get:
      description: Get a paidbook by its ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/paidbook.PaidBook'
      summary: Get paidbook by ID
      tags:
      - paidbook
    put:
      consumes:
      - multipart/form-data
      description: Update paidbook details by ID (with optional new files)
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      - description: Book Title
        in: formData
        name: title
        type: string
      - description: Book Summary
        in: formData
        name: summary
        type: string
      - description: Book Author
        in: formData
        name: author
        type: string
      - description: Book Pages
        in: formData
        name: pages
        type: integer
      - description: Book Price
        in: formData
        name: price
        type: integer
      - description: Cover Image
        in: formData
        name: cover_image
        type: file
      - description: PDF File
        in: formData
        name: pdf_file
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: updated
          schema:
            type: string
      summary: Update paidbook
      tags:
      - paidbook
swagger: "2.0"
